buildscript {
	ext {
		kotlinVersion = '1.2.41'
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
        jcenter()
		google()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath 'com.google.gms:google-services:3.3.1'
	}
}

allprojects {
	apply plugin: 'kotlin'
	apply plugin: 'kotlin-spring'
	apply plugin: 'eclipse'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'com.angelhack'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = 1.8
	compileKotlin {
		kotlinOptions {
			freeCompilerArgs = ["-Xjsr305=strict"]
			jvmTarget = "1.8"
		}
	}
	compileTestKotlin {
		kotlinOptions {
			freeCompilerArgs = ["-Xjsr305=strict"]
			jvmTarget = "1.8"
		}
	}

	repositories {
		mavenCentral()
		maven { url "https://maven.google.com" }
		google()
	}


	dependencies {
		compile('org.springframework.boot:spring-boot-starter')
		compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
		compile("org.jetbrains.kotlin:kotlin-reflect")
		compile("com.linecorp.bot:line-bot-spring-boot:1.16.0")
		compile 'com.google.firebase:firebase-core:15.0.2'
		compile 'com.google.api-client:google-api-client-android:1.23.0' exclude module: 'httpclient'
		compile 'com.google.http-client:google-http-client-gson:1.23.0' exclude module: 'httpclient'
		compile 'com.google.apis:google-api-services-vision:v1-rev369-1.23.0'
		implementation 'com.google.firebase:firebase-ml-vision:15.0.0'
		testCompile('org.springframework.boot:spring-boot-starter-test')
	}

}
